{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

<div class="featured-collection-section color-{{ section.settings.color_scheme }}" 
     style="--section-top-margin: {{ section.settings.section_top_margin }}px; 
            --section-bottom-margin: {{ section.settings.section_bottom_margin }}px;
            padding-top: {{ section.settings.footer_top_padding }}px;
            padding-bottom: {{ section.settings.footer_bottom_padding }}px;
            font-family: var(--font-body-family) !important;">
  
  <h1 class="heading" style="font-size: {{ section.settings.title_font_size }}px;">
    {{ section.settings.title }}
  </h1>

  <div class="related-products-arrow-parent">
    <div class="related-products-collection-arrow-buttons">
      <button class="related-products-arrow left" onclick="scrollCards(-1)">‹</button>
      <button class="related-products-arrow right" onclick="scrollCards(1)">›</button>
    </div>
  </div>

  <div class="product-container">
    {% paginate collections.all.products by section.settings.products_to_show %}
      {% for product in collections.all.products %}
        {% assign product_offer = product.metafields.custom.offer %}
        <div class="product-card"
             style="--pseudo-bg-color: {{ section.settings.product_card_background_color }};
                    background-color: {{ section.settings.product_card_background_color }};">

          <div class="product-image1">
            {% if section.settings.show_sale_badge and product.compare_at_price > product.price %}
              <div class="sale-badge"
                  style="background-color: {{ section.settings.sale_badge_background_color }};
                          color: {{ section.settings.sale_badge_text_color }};">
                <span>Sale</span>
              </div>
            {% endif %}
            <a href="{{ product.url }}">
              {% if product.featured_image %}
                {% assign image = product.featured_image %}
                {% assign focal_point = image.presentation.focal_point | default: '50-50' %}
                {% assign focal_x = focal_point | split: '-' | first %}
                {% assign focal_y = focal_point | split: '-' | last %}
                
                <picture>
                  <source
                    type="image/webp"
                    srcset="
                      {{ image | image_url: width: 300, height: 300, crop: 'center', format: 'webp' }} 300w,
                      {{ image | image_url: width: 600, height: 600, crop: 'center', format: 'webp' }} 600w,
                      {{ image | image_url: width: 800, height: 800, crop: 'center', format: 'webp' }} 800w,
                      {{ image | image_url: width: 1200, height: 1200, crop: 'center', format: 'webp' }} 1200w"
                    sizes="(max-width: 600px) 300px,
                          (max-width: 1000px) 600px,
                          800px">
                  <img
                    srcset="
                      {{ image | image_url: width: 300, height: 300, crop: 'center' }} 300w,
                      {{ image | image_url: width: 600, height: 600, crop: 'center' }} 600w,
                      {{ image | image_url: width: 800, height: 800, crop: 'center' }} 800w,
                      {{ image | image_url: width: 1200, height: 1200, crop: 'center' }} 1200w"
                    sizes="(max-width: 600px) 300px,
                          (max-width: 1000px) 600px,
                          800px"
                    src="{{ image | image_url: width: 800, height: 800, crop: 'center' }}"
                    alt="{{ product.title | escape }}"
                    loading="lazy"
                    width="100%"
                    height="100%"
                    style="object-fit: cover; object-position: {{ focal_x }}% {{ focal_y }}%;"
                    decoding="async">
                </picture>
              {% else %}
                {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
              {% endif %}
            </a>
          </div>

          <div class="product-info">
            <h7 style="color: {{ section.settings.text_color }};">{{ product.title }}</h7>
            {% if section.settings.show_vendor %}
              <p class="vendor" style="color: {{ section.settings.vendor_text_color }};">{{ product.vendor }}</p>
            {% endif %}
          </div>

          <div class="price-reviews-icons">
            {% if product.compare_at_price > product.price %}
              <div class="original-price-container">
                <span class="original-price" style="color: {{ section.settings.text_color }}; text-decoration: line-through;">
                  {{ product.compare_at_price | money }}
                </span>
              </div>
              
              <p class="price-tag discount-active" 
                 style="background-color: {{ section.settings.price_background_color }};
                        --pseudo-bg-color: {{ section.settings.product_card_background_color }};
                        color: {{ section.settings.price_text_color }};">
                <span class="current-price">{{ product.price | money }}</span>
              </p>
            {% else %}
              <p class="price-tag no-discount" 
                 style="background-color: {{ section.settings.price_background_color }};
                        --pseudo-bg-color: {{ section.settings.product_card_background_color }};
                        color: {{ section.settings.price_text_color }};">
                <span class="current-price">{{ product.price | money }}</span>
              </p>
            {% endif %}

            <div class="dotted-line-wrapper" style="border-top-color: {{ section.settings.dotted_line_color }};">
              <div class="dotted-line"></div>
            </div>
          </div>
        </div>
      {% endfor %}
    {% endpaginate %}
  </div>
</div>

<div class="view-all-wrapper">
  <a href="/collections/all" class="view-all-link">
    View all Products →
  </a>
</div>

<script>
function scrollCards(direction) {
  const containers = document.querySelectorAll('.product-container');
  containers.forEach(container => {
    const cards = container.querySelectorAll('.product-card');
    if (!cards.length) return;
    
    const cardStyle = window.getComputedStyle(cards[0]);
    const cardWidth = cards[0].offsetWidth + 
                     parseInt(cardStyle.marginLeft) + 
                     parseInt(cardStyle.marginRight) + 
                     20;
    
    const currentScroll = container.scrollLeft;
    const newScroll = currentScroll + (direction * cardWidth);
    
    container.scrollTo({
      left: newScroll,
      behavior: 'smooth'
    });
  });
}

document.addEventListener('DOMContentLoaded', function() {
  const containers = document.querySelectorAll('.product-container');
  
  containers.forEach(container => {
    const leftArrow = container.parentElement.querySelector('.arrow1');
    const rightArrow = container.parentElement.querySelector('.arrow2');
    
    function updateArrowVisibility() {
      if (!leftArrow || !rightArrow) return;
      
      leftArrow.style.opacity = container.scrollLeft <= 0 ? '0.5' : '1';
      leftArrow.disabled = container.scrollLeft <= 0;
      
      const canScrollRight = container.scrollWidth > (container.scrollLeft + container.clientWidth + 1);
      rightArrow.style.opacity = canScrollRight ? '1' : '0.5';
      rightArrow.disabled = !canScrollRight;
    }
    
    container.addEventListener('scroll', updateArrowVisibility);
    updateArrowVisibility();
    
    let touchStartX = 0;
    let touchEndX = 0;
    
    container.addEventListener('touchstart', e => {
      touchStartX = e.changedTouches[0].screenX;
    }, false);
    
    container.addEventListener('touchend', e => {
      touchEndX = e.changedTouches[0].screenX;
      if (touchStartX - touchEndX > 50) {
        scrollCards(1);
      } else if (touchEndX - touchStartX > 50) {
        scrollCards(-1);
      }
    }, false);
  });
});
</script>

{% schema %}
{
  "name": "Related Products",
  "disabled_on": {
    "groups": ["header", "footer"],
    "templates": ["index", "collection", "blog", "article", "page"]
  },
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Our Products"
    },
    {
      "id": "color_scheme",
      "type": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "label": "Title Font Size",
      "min": 20,
      "max": 80,
      "step": 1,
      "default": 36
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 25,
      "step": 1,
      "default": 4,
      "label": "Number of products to show"
    },

     {
      "type": "header",
      "content": "Section Layout"
    },
    {
      "type": "range",
      "id": "section_top_margin",
      "label": "Top Margin (px)",
      "min": 0,
      "max": 200,
      "step": 5,
      "default": 50
    },
    {
      "type": "range",
      "id": "section_bottom_margin",
      "label": "Bottom Margin (px)",
      "min": 0,
      "max": 200,
      "step": 5,
      "default": 50
    },
    {
      "type": "range",
      "id": "footer_top_padding",
      "label": "Top Padding (px)",
      "min": 0,
      "max": 200,
      "step": 5,
      "default": 50
    },
    {
      "type": "range", 
      "id": "footer_bottom_padding",
      "label": "Bottom Padding (px)",
      "min": 0,
      "max": 200,
      "step": 5,
      "default": 50
    },

    {
      "type": "header",
      "content": "Sale Badge Settings"
    },
    {
      "type": "checkbox",
      "id": "show_sale_badge",
      "label": "Show sale badge",
      "default": true,
      "info": "Display sale badge on products with reduced price"
    },
    {
      "type": "header",
      "content": "Vendor Settings"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false,
      "info": "Display product vendor name"
    },
  ],
  "presets": [
    {
      "name": "Related Products",
      "category": "Products"
    }
  ]
}
{% endschema %}
