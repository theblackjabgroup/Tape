{% schema %}
{
  "name": "Countdown",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Countdown title"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Use this section to create urgency and boost sales.</p>",
    },
    {
      "type": "text",
      "id": "end_date",
      "label": "End Date (YYYY-MM-DD)"
    },
    {
      "type": "text",
      "id": "end_time",
      "label": "End Time (HH:mm:ss)",
      "default": "00:00"
    },
     {
      "type": "header",
      "content": "Image Settings"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Desktop Image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image",
      "label": "Mobile Image (Optional)",
      "info": "If not set, desktop image will be used"
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "checkbox",
      "id": "show_button",
      "label": "Show Button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_arrow",
      "label": "Show Arrow",
      "default": true,
      "info": "Display arrow icon on button"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "header",
      "content": "Desktop Font Size Settings"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "label": "Heading Font Size",
      "min": 15,
      "max": 30,
      "default": 16
    },
    {
      "type": "range",
      "id": "description_font_size",
      "label": "Description Font Size",
      "min": 12,
      "max": 24,
      "default": 12
    },
    {
      "type": "range",
      "id": "timer_font_size",
      "label": "Timer Font Size",
      "min": 14,
      "max": 30,
      "default": 16
    },
    {
      "type": "header",
      "content": "Spacing Settings"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top Padding",
      "min": 0,
      "max": 100,
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom Padding",
      "min": 0,
      "max": 100,
      "default": 50
    },
    {
      "type": "header",
      "content": "Background Width Settings"
    },
    {
      "type": "range",
      "id": "background_width_desktop",
      "label": "Desktop Background Width",
      "min": 70,
      "max": 100,
      "default": 80,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "background_width_mobile",
      "label": "Mobile Background Width",
      "min": 90,
      "max": 100,
      "default": 95,
      "unit": "%"
    }
  ],
  "presets": [
    {
      "name": "Countdown",
      "category": "Custom"
    }
  ]
}
{% endschema %}

{{ 'countdown.css' | asset_url | stylesheet_tag }}
<div class="countdown-container color-{{ section.settings.color_scheme }}" style="width: 100%;">
  <div class="countdown-section color-{{ section.settings.color_scheme }} layout-{{ section.settings.layout_style }}" 
       style="
              padding-top: {{ section.settings.padding_top }}px; 
              padding-bottom: {{ section.settings.padding_bottom }}px;
              --desktop-width: {{ section.settings.background_width_desktop }}%;
              --mobile-width: {{ section.settings.background_width_mobile }}%;
              width: var(--desktop-width);">
    
      <div class="countdown-border-cutouts countdown-border-top">
        {% for i in (1..18) %}
          <div class="countdown-cutout">&nbsp;</div>
        {% endfor %}
      </div>
      <div class="countdown-border-cutouts countdown-border-left">
        {% for i in (1..8) %}
          <div class="countdown-cutout">&nbsp;</div>
        {% endfor %}
      </div>
      <div class="countdown-border-cutouts countdown-border-right">
        {% for i in (1..8) %}
          <div class="countdown-cutout">&nbsp;</div>
        {% endfor %}
      </div>
      <div class="countdown-border-cutouts countdown-border-bottom">
        {% for i in (1..18) %}
          <div class="countdown-cutout">&nbsp;</div>
        {% endfor %}
      </div>

    <div class="countdown-section__container page-width">
      <div class="countdown-section__image-wrapper">
        {% if section.settings.image %}
          {{
            section.settings.image
            | image_url: width: 1800
            | image_tag:
                class: 'countdown-section__image desktop-only-image',
                alt: "Countdown Image" | escape
          }}

          {{
            section.settings.mobile_image | default: section.settings.image
            | image_url: width: 800
            | image_tag:
                class: 'countdown-section__image mobile-only-image',
                alt: "Countdown Image" | escape
          }}
        {% else %}
          <div class="countdown_placeholder">
            {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
          </div>
        {% endif %}
      </div>
      <div class="countdown-section__content">
        <h2 class="countdown-section__heading" style="font-size: {{ section.settings.heading_font_size }}px;">
          {{ section.settings.heading }}
        </h2>
        <div class="countdown-section__description" style="font-family: {{ section.settings.type_body_font }}">
            {{ section.settings.description }}
        </div>

        <div class="countdown-timer" id="countdown-timer-{{ section.id }}" style="font-size: {{ section.settings.timer_font_size }}px;"></div>
        {% if section.settings.show_button %}
          <a href="{{ section.settings.button_link }}" class="countdown-section__button">
            {{ section.settings.button_label }}
            {% if section.settings.show_arrow %}
              <svg class="countdown_svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
              </svg>
            {% endif %}
          </a>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
  .desktop-only-image {
    display: block;
  }
  .mobile-only-image {
    display: none;
  }
  
  
  @media screen and (max-width: 750px) {
    .desktop-only-image {
      display: none;
    }
    .mobile-only-image {
      display: block;
    }
  }
</style>

<script>
 (function () {
    function startCountdown(elementId, endDateTime) {
      const timerElement = document.getElementById(elementId);
      if (!timerElement) return;

      function displayDefaultTimer() {
        timerElement.innerHTML = `
          <div class="countdown-timer__item"><span>00</span> Days</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>00</span> Hours</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>00</span> Minutes</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>00</span> Seconds</div>
        `;
      }

      const endDate = new Date(endDateTime);
      if (isNaN(endDate.getTime())) {
        displayDefaultTimer();
        return;
      }

      const interval = setInterval(() => {
        const now = new Date().getTime();
        const distance = endDate.getTime() - now;

        if (distance < 0) {
          clearInterval(interval);
          timerElement.innerHTML = "<p>Offer has expired!</p>";
          return;
        }

        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        const pad = (num) => num.toString().padStart(2, '0');

        timerElement.innerHTML = `
          <div class="countdown-timer__item"><span>${pad(days)}</span> Days</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>${pad(hours)}</span> Hours</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>${pad(minutes)}</span> Minutes</div>
          <div class="countdown_dots"><span></span></div>
          <div class="countdown-timer__item"><span>${pad(seconds)}</span> Seconds</div>
        `;
      }, 1000);

      displayDefaultTimer();
    }

    const countdownTimerId = "countdown-timer-{{ section.id }}";
    const endDateTime = "{{ section.settings.end_date }}T{{ section.settings.end_time }}";
    startCountdown(countdownTimerId, endDateTime);
})();
</script>
